name: .NET Core Build and Publish

on:
  push:
    branches: [master]
  pull_request:
    branches: master
    
env:
  NETCORE_VERSION: '3.1.x'  
  GIT_REPO_ROOT: src
  MAJOR_MINOR_VERSION: 0.1.
  SOLUTION_FILE: DotnetBuildMetrics.sln
  DOTNET_ROLL_FORWARD_ON_NO_CANDIDATE_FX: 2

jobs: 

  # build:
  #   name: Build Package 
  #   runs-on: windows-2016 # using windows agent for net472 build.

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Setup .NET Core SDK ${{ env.NETCORE_VERSION }}
  #     uses: actions/setup-dotnet@v1
  #     with:
  #       dotnet-version: ${{ env.NETCORE_VERSION }}

  #   - name: Restore
  #     working-directory: ${{ env.GIT_REPO_ROOT }}        
  #     run: dotnet restore ${{ env.SOLUTION_FILE }}

  #   - name: Add MSBuild to PATH
  #     uses: microsoft/setup-msbuild@v1

  #   - name: Build
  #     working-directory: ${{ env.GIT_REPO_ROOT }}        
  #     run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Debug --no-restore
        
  #   - name: Pack
  #     working-directory: ${{ env.GIT_REPO_ROOT }}    
  #     run: dotnet pack ${{ env.SOLUTION_FILE }} --configuration Debug -o finalpackage --no-build -p:PackageVersion=${{ env.MAJOR_MINOR_VERSION }}${{ github.run_number }}

  #   - name: Publish artifact
  #     uses: actions/upload-artifact@master
  #     with:
  #       name: nupkg
  #       path: ${{ env.GIT_REPO_ROOT }}/finalpackage

  # deploy:
  #   needs: build
  #   #if: github.ref == 'refs/heads/master'
  #   name: Deploy Packages
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download Package artifact
  #       uses: actions/download-artifact@master
  #       with:
  #         name: nupkg
  #         path: ./nupkg

  #     - name: Setup NuGet
  #       uses: NuGet/setup-nuget@v1.0.5
  #       with:
  #         nuget-api-key: ${{ secrets.KLONDIKE_API_KEY }}
  #         nuget-version: latest

  #     - name: Setup .NET Core SDK
  #       uses: actions/setup-dotnet@v1
  #       with:
  #         dotnet-version: ${{ env.NETCORE_VERSION }}

      # - name: Push to NuGet
      #   run: dotnet nuget push nupkg/**/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://nuget.org --skip-duplicate
  
 release:
    runs-on: ubuntu-latest
    steps:
    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release
        release_name: release
        draft: true
        prerelease: false

    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}